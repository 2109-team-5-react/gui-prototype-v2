{"version":3,"sources":["lib/apiClient.js","components/monitoring_components/ErrorTableTwo.js","components/Navigation.js","components/monitoring_components/ScaleToggler.js","components/Title.js","funcs/Monitoring.js","components/monitoring_components/Chart.js","components/monitoring_components/Logs.js","components/monitoring_components/MultipleSelector.js","components/monitoring_components/Dashboard.js","components/monitoring_components/FrontendMonitoring.js","components/monitoring_components/BackendMonitoring.js","constants/Monitoring.js","components/monitoring_components/DataView.js","components/monitoring_components/Monitoring.js","components/datasources_components/handler_form_components/GraphQL.js","components/datasources_components/handler_form_components/DragDrop.js","components/datasources_components/handler_form_components/OpenAPI.js","components/datasources_components/handler_form_components/Postgres.js","components/datasources_components/handler_form_components/Mongoose.js","components/datasources_components/handler_form_components/JSONSchema.js","components/datasources_components/InputModal.js","components/datasources_components/HandlerList.js","components/datasources_components/ConnectedSources.js","components/datasources_components/DataSources.js","components/authentication_components/Signup.js","components/authentication_components/Signin.js","components/navbar-left/NavBarLeft.js","components/navbar-left/MenuButton.js","components/authentication_components/UserTable.js","components/authentication_components/ManageUsers.js","components/documentation_components/Documentation.js","components/documentation_components/markdown.js","components/Dashboard.js","components/App.js","components/theme.js","index.js"],"names":["apiClient","createConfig","jwt","sources","axios","post","then","res","status","getTimeData","token","view","sinceUnixTime","minutesSince","queryString","dataLookup","get","headers","authorization","response","getQueryErrorData","hours","signupUser","user","data","error","loginUser","getAllUsers","deleteUser","username","delete","Styles","styled","div","Table","columns","useTable","useResizeColumns","useGridLayout","getTableProps","headerGroups","rows","prepareRow","className","map","headerGroup","column","getHeaderProps","render","canResize","getResizerProps","isResizing","id","row","cells","cell","getCellProps","ErrorTable","loggedInUser","useState","errorData","setErrorData","setHours","useEffect","a","errors","errorDataPulled","err","_id","timeOfError","Date","createdAt","toDateString","toLocaleTimeString","ip","errStrings","errs","e","message","join","sourceQuery","reverse","filterByHours","preventDefault","filteredErrors","filteredErrorsPulled","React","useMemo","accessor","Header","width","Box","sx","display","flexWrap","flexDirection","margin","FormControl","FilledInput","name","value","onChange","target","inputProps","inputMode","pattern","endAdornment","InputAdornment","position","FormHelperText","Button","variant","onClick","to","linkStyle","color","textDecoration","paths","SidebarMainList","isAdmin","location","useLocation","style","ListItemButton","selected","pathname","ListItemIcon","ListItemText","primary","href","ScaleToggler","groupName","selection","options","ToggleButtonGroup","fullWidth","minHeight","exclusive","option","idx","ToggleButton","disabled","Title","props","Typography","component","gutterBottom","children","filterDataByDropdown","dataField","dropdownSelections","filter","datum","isSelectionIncluded","Array","isArray","some","v","includes","Chart","timeScaleProps","theme","useTheme","chartData","timeRange","bin","unixStart","Math","round","getTime","divisionInterval","push","unixTime","moment","unix","timeConversion","latency","count","fake","forEach","datapoint","timeBin","format","timeFormat","hasOwnProperty","tick","Object","keys","key","arr","reduce","b","length","toFixed","sort","binDataByTimestamp","ticks","tickArr","slice","_","ResponsiveContainer","height","debounce","AreaChart","top","right","bottom","left","Legend","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","timeStr","stroke","palette","text","secondary","typography","body2","scale","type","domain","dataMin","dataMax","interval","minTickGap","YAxis","yAxisId","fontSize","tickVal","allowDecimals","orientation","Tooltip","labelFormatter","formatter","Area","isAnimationActive","fillOpacity","strokeWidth","dot","activeDot","r","fill","animationEasing","main","LinearProgressWithLabel","alignItems","minWidth","mr","LinearProgress","Logs","newCell","rootFields","Fragment","size","TableHead","TableRow","TableCell","TableBody","toString","getStyles","personName","fontWeight","indexOf","fontWeightRegular","fontWeightMedium","MultipleSelect","filterProps","selections","setSelections","InputLabel","label","Select","labelId","multiple","event","split","splice","item","MenuItem","Dashboard","subfilter","Grid","xs","md","Paper","p","TableContainer","FrontendMonitoring","filterValue","setFilterValue","filterOptions","rawData","Set","flat","filteredData","BackendMonitoring","resolverValue","setResolverValue","subfieldValue","setSubfieldValue","rootQueries","fieldToFilter","selectionArr","resolver","callback","field","resolverOptions","subfieldOptions","IN_SECONDS","FORMATS","DataView","currentView","timeScale","setTimeScale","setData","currentTime","timeRangeProps","hour","time","day","week","month","getAPIData","useCallback","resData","setInterval","console","log","clearInterval","dataFilteredByTimescale","filterDataByTimescale","newTimeScale","Monitoring","setCurrentView","py","newView","GraphQL","sourceList","setSourceList","setOpen","setName","url","setUrl","TextField","mb","handler","created","toLocaleDateString","year","DragDrop","setFile","fileTypes","onTypeError","handleChange","file","types","OpenAPI","schemaFile","setSchemaFile","handleCreateClick","schemaFileContent","schemaFileType","mt","Postgres","Mongoose","modelName","setModelName","models","setModels","modelFile","setModelFile","handleAddModelClick","modelContent","content","JSONSchema","operations","setOperations","operationType","setOperationType","operationField","setOperationField","operationPath","setOperationPath","operationMethod","setOperationMethod","operationResponseSchemaFile","setOperationResponseSchemaFile","handleAddOperationClick","path","method","responseSchemaContent","transform","bgcolor","border","borderRadius","boxShadow","selectMeshHandler","handlerName","BasicModal","open","Modal","onClose","createData","description","HandlerList","align","DeleteSourceButton","sourcelist","sourcename","handleAlert","sourceName","filteredSourceList","source","ConnectedSources","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleAlertTimeout","messageType","setTimeout","handleSubmit","Alert","severity","DataSources","Copyright","Link","getFullYear","createTheme","SignUp","setLoggedInUser","closeModal","setUsers","allUsers","makeAdmin","setMakeAdmin","firstName","setFirstName","lastName","setLastName","setUsername","password","setPassword","FormData","currentTarget","userObj","admin","responseData","clearForm","ThemeProvider","Container","maxWidth","CssBaseline","marginTop","Avatar","m","noValidate","onSubmit","container","spacing","sm","autoComplete","required","autoFocus","FormControlLabel","control","Checkbox","checked","SignIn","setIsAdmin","NavBarLeft","Drawer","MainList","toggleDrawer","Toolbar","justifyContent","px","IconButton","Divider","MenuButton","edge","marginRight","tableCellClasses","head","backgroundColor","common","black","white","body","action","hover","Documentation","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","mdTheme","pr","noWrap","flexGrow","Test","mode","grey","overflow","element","ErrorTableTwo","App","red","A400","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.d724ff04.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst apiClient = {\n  createConfig(jwt, sources) {\n    return axios\n      .post(\n        \"api/config\",\n        { sources }\n        // {\n        //   headers: {\n        //     authorization: `bearer ${jwt}`,\n        //   },\n        // }\n      )\n      .then((res) => {\n        return res.status;\n      });\n  },\n  async getTimeData(token, view, sinceUnixTime, minutesSince = 5) {\n    let queryString = sinceUnixTime\n      ? `?since=${sinceUnixTime}`\n      : `?minutes=${minutesSince}`;\n\n    let dataLookup = view === \"frontend\" ? \"queries\" : \"resolvers\";\n\n    let response = await axios.get(`api/monitor/${dataLookup}${queryString}`, {\n      headers: {\n        authorization: `bearer ${token}`,\n      },\n    });\n    return response;\n  },\n  async getQueryErrorData(token, hours = 24) {\n    let queryString = `?hours=${hours}`;\n    let response = await axios.get(`api/monitor/errors${queryString}`, {\n      headers: {\n        authorization: `bearer ${token}`,\n      },\n    });\n    return response;\n  },\n  async signupUser(user) {\n    try {\n      let response = await axios.post(\"api/users\", user);\n      return response.data;\n    } catch (err) {\n      return { error: \"All fields are required and must use unique username\" };\n    }\n  },\n  async loginUser(user) {\n    try {\n      let response = await axios.post(\"api/users/login\", user);\n      return response.data;\n    } catch (err) {\n      return {\n        error: \"Username/password combination failed. Please try again.\",\n      };\n    }\n  },\n  async getAllUsers() {\n    try {\n      let response = await axios.get(\"api/users\");\n      return response.data;\n    } catch (err) {\n      return { error: \"All fields are required and must use unique username\" };\n    }\n  },\n  async deleteUser(username) {\n    try {\n      let response = await axios.delete(\"api/users\", { data: username });\n      return response;\n    } catch (err) {\n      return { error: \"All fields are required and must use unique username\" };\n    }\n  },\n};\n\nexport default apiClient;\n","import React from 'react'\nimport { useEffect, useState } from 'react'\nimport apiClient from '../../lib/apiClient'\nimport { DataGrid, GridRowsProp, GridColDef } from '@mui/x-data-grid';\nimport styled from 'styled-components'\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport FilledInput from '@mui/material/FilledInput';\nimport Box from '@mui/material/Box';\nimport { Navigate } from \"react-router-dom\";\nimport {\n  useTable,\n  useResizeColumns,\n  useGridLayout\n} from 'react-table'\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n  ${'' /* These styles are suggested for the table fill all available space in its containing element */}\n  display: block;\n  ${'' /* These styles are required for a horizontaly scrollable table overflow */}\n  overflow: auto;\n  .table {\n    border: 1px solid black;\n    background-color: black;\n    grid-gap: 1px;\n    .cell,\n    .header {\n      padding: 0.5rem;\n      background-color: white;\n      .resizer {\n        right: 0;\n        background: blue;\n        width: 10px;\n        height: 100%;\n        position: absolute;\n        top: 0;\n        z-index: 1;\n        ${'' /* prevents from scrolling while dragging on touch devices */}\n        touch-action :none;\n  \n        &.isResizing {\n          background: red;\n        }\n      }\n    }\n  }\n`\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useResizeColumns,\n    useGridLayout,\n  )\n\n  return (\n    <div {...getTableProps()} className=\"table\">\n      {headerGroups.map(headerGroup => (\n        headerGroup.headers.map(column => (\n          <div key={column.id} {...column.getHeaderProps()} className=\"cell header\">\n            {column.render('Header')}\n            {column.canResize && (\n              <div\n                {...column.getResizerProps()}\n                className={`resizer ${\n                  column.isResizing ? 'isResizing' : ''\n                  }`}\n              />\n            )}\n          </div>\n        ))\n      ))}\n      {rows.map(row =>\n        prepareRow(row) || (\n          row.cells.map(cell => (\n            <div {...cell.getCellProps()} className=\"cell\">\n              {cell.render('Cell')}\n            </div>\n          ))\n        )\n      )}\n    </div>\n  )\n}\n\nconst ErrorTable = ({loggedInUser}) => {\n  const [errorData, setErrorData] = useState([])\n  const [hours, setHours] = useState(24)\n  useEffect(async () => {\n    let errors = await apiClient.getQueryErrorData(loggedInUser, 24)\n    let errorDataPulled = errors.data.map((err) => {\n      return {\n        id: err._id,\n        timeOfError: `${new Date(err.createdAt).toDateString()} ${new Date(err.createdAt).toLocaleTimeString()}`,\n        ip: err.ip,\n        errStrings: err.errs.map((e) => e.message).join(', '),\n        sourceQuery: err.sourceQuery\n      }\n    }).reverse()\n    setErrorData(errorDataPulled)\n  }, [])\n\n  const filterByHours = async (e) => {\n    e.preventDefault()\n    let filteredErrors = await apiClient.getQueryErrorData(loggedInUser, hours)\n    let filteredErrorsPulled = filteredErrors.data.map((err) => {\n      return {\n        id: err._id,\n        timeOfError: `${new Date(err.createdAt).toDateString()} ${new Date(err.createdAt).toLocaleTimeString()}`,\n        ip: err.ip,\n        errStrings: err.errs.map((e) => e.message).join(', '),\n        sourceQuery: err.sourceQuery\n      }\n    }).reverse()\n    setErrorData(filteredErrorsPulled)\n  }\n\n  const columns = React.useMemo(\n    () => [\n      { accessor: 'timeOfError', Header: 'Datetime of Error', width: 250},\n      { accessor: 'ip', Header: 'Origin', width: 150 },\n      { accessor: 'errStrings', Header: 'List Of Errors' },\n      { accessor: 'sourceQuery', Header: 'Original Query' }\n    ],\n    []\n  )\n\n  \n  // const columns = [\n  //   { field: 'timeOfError', headerName: 'Datetime of Error', width: 200},\n  //   { field: 'ip', headerName: 'Origin', width: 150 },\n  //   { field: 'errStrings', headerName: 'List Of Errors', width: 600 },\n  //   { field: 'sourceQuery', headerName: 'Original Query', width: 400 }\n  // ]\n  if (loggedInUser) {\n    return (\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: 'column', margin: '20px' }}>\n        <FormControl>\n          <FilledInput name={'hours'} margin='dense' value={hours} onChange={(e) => setHours(e.target.value)} inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }} endAdornment={<InputAdornment position='end'>hours ago</InputAdornment>}/>\n          <FormHelperText id=\"hours-since-helper-text\">Filter Errors By Hours Since</FormHelperText>\n        </FormControl>\n        <Button variant='contained' onClick={filterByHours}>Filter by hour range</Button>\n        <Styles>\n          <Table columns={columns} data={errorData} />\n        </Styles>\n      </Box>\n    )\n  } else {\n    return <Navigate to=\"/signin\" />\n  }\n  \n}\n\nexport default ErrorTable\n","import React from \"react\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport GraphIcon from \"@mui/icons-material/AccountTree\";\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\nimport DocumentationIcon from \"@mui/icons-material/Description\";\nimport PeopleIcon from \"@mui/icons-material/People\";\nimport LayersIcon from \"@mui/icons-material/Layers\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst linkStyle = {\n  color: \"inherit\",\n  textDecoration: \"none\",\n};\n\nconst paths = {\n  home: \"\",\n  datasources: \"datasources\",\n  monitoring: \"monitoring\",\n  manageusers: \"manageusers\",\n  graphiql: \"apollo\",\n  documentation: \"documentation\",\n  errors: \"errors\",\n};\n\nexport const SidebarMainList = ({ isAdmin }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <Link style={linkStyle} to={`/${paths.home}`}>\n        <ListItemButton selected={location.pathname === `/${paths.home}`}>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItemButton>\n      </Link>\n      <Link style={linkStyle} to={`/${paths.datasources}`}>\n        <ListItemButton\n          selected={location.pathname === `/${paths.datasources}`}\n        >\n          <ListItemIcon>\n            <LayersIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Data Sources\" />\n        </ListItemButton>\n      </Link>\n      <Link style={linkStyle} to={`/${paths.errors}`}>\n        <ListItemButton selected={location.pathname === `/${paths.errors}`}>\n          <ListItemIcon>\n            <ErrorIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Errors\" />\n        </ListItemButton>\n      </Link>\n      {/* </Link>\n      {isAdmin ? (\n        <Link style={linkStyle} to={`/${paths.manageusers}`}>\n          <ListItemButton\n            selected={location.pathname === `/${paths.manageusers}`}\n          >\n            <ListItemIcon>\n              <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Manage Users\" />\n          </ListItemButton>\n        </Link>\n      ) : null} */}\n      <a style={linkStyle} href={`http://localhost:6868`} target=\"_blank\">\n        <ListItemButton selected={location.pathname === `/${paths.graphiql}`}>\n          <ListItemIcon>\n            <GraphIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"GraphiQL\" />\n        </ListItemButton>\n      </a>\n      {/* <a style={linkStyle} href={`/${paths.graphiql}`} target=\"_blank\">\n        <ListItemButton selected={location.pathname === `/${paths.graphiql}`}>\n          <ListItemIcon>\n            <GraphIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"GraphiQL (prod)\" />\n        </ListItemButton>\n      </a> */}\n      <Link style={linkStyle} to={`/${paths.documentation}`}>\n        <ListItemButton\n          selected={location.pathname === `/${paths.documentation}`}\n        >\n          <ListItemIcon>\n            <DocumentationIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Documentation\" />\n        </ListItemButton>\n      </Link>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\n\nconst ScaleToggler = ({ groupName, selection, onChange, options }) => {\n  return (\n    <ToggleButtonGroup\n      value={selection}\n      onChange={onChange}\n      fullWidth={true}\n      sx={{ minHeight: 65 }}\n      exclusive\n    >\n      {options.map((option, idx) => {\n        return (\n          <ToggleButton\n            key={idx}\n            value={option}\n            aria-label={groupName}\n            fullWidth={true}\n            color=\"primary\"\n            disabled={selection === option}\n          >\n            {option}\n          </ToggleButton>\n        );\n      })}\n    </ToggleButtonGroup>\n  );\n};\n\nexport default ScaleToggler;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\n\nfunction Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;","import moment from \"moment\";\n\nexport const filterDataByDropdown = (data, dataField, dropdownSelections) => {\n  return data.filter((datum) => {\n    let isSelectionIncluded = Array.isArray(datum[dataField])\n      ? datum[dataField].some((v) => dropdownSelections.includes(v))\n      : dropdownSelections.includes(datum[dataField]);\n\n    return dropdownSelections.includes(\"all\") || isSelectionIncluded;\n  });\n};\n\nexport const filterDataByTimescale = (data, timeRange) => {\n  return data.filter((arr) => arr.unixTime >= timeRange.unixStart);\n};\nexport const binDataByTimestamp = (data, timeRange) => {\n  let bin = {};\n\n  for (\n    let idx = timeRange.unixStart;\n    idx <= Math.round(new Date().getTime() / 1000);\n    idx += timeRange.divisionInterval\n  ) {\n    data.push({\n      unixTime: moment(moment.unix(idx), timeRange.timeConversion).unix(),\n      latency: 0,\n      count: 0,\n      fake: true,\n    });\n  }\n\n  data.forEach((datapoint) => {\n    let timeBin = moment.unix(datapoint.unixTime).format(timeRange.timeFormat);\n    if (bin.hasOwnProperty(timeBin)) {\n      if (datapoint.fake) bin[timeBin].tick = true;\n      return bin[timeBin].push(datapoint);\n    }\n    bin[timeBin] = [datapoint];\n  });\n\n  let binnedData = Object.keys(bin).map((key) => {\n    return {\n      unixTime: moment(\n        moment.unix(bin[key][0].unixTime).format(timeRange.timeConversion)\n      ).unix(),\n      latency: +(\n        bin[key].map((arr) => +arr.latency).reduce((a, b) => a + b) /\n        bin[key].length\n      ).toFixed(3),\n      count: bin[key].filter((datapoint) => !datapoint.hasOwnProperty(\"fake\"))\n        .length,\n    };\n  });\n\n  return binnedData.sort((a, b) => a.unixTime - b.unixTime);\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useTheme } from \"@mui/material/styles\";\nimport {\n  AreaChart,\n  Legend,\n  Area,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\nimport Title from \"../Title\";\nimport { binDataByTimestamp } from \"../../funcs/Monitoring\";\n\nexport default function Chart({ timeScaleProps, data }) {\n  const theme = useTheme();\n\n  const chartData = binDataByTimestamp(data, timeScaleProps);\n\n  const ticks = ((data) => {\n    let tickArr = data\n      .filter((datum) => datum.tick)\n      .map((datum) => datum.unixTime)\n      .slice();\n    if (tickArr.length > 10) {\n      tickArr = tickArr.filter((_, idx) => idx % 2 === 1);\n    }\n    return tickArr;\n  })(chartData);\n\n  return (\n    <>\n      <Title>{`Requests & Latency`}</Title>\n      <ResponsiveContainer height={400} debounce={1}>\n        <AreaChart\n          data={chartData}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <Legend />\n          <CartesianGrid strokeDasharray=\"4 4\" />\n          <XAxis\n            dataKey=\"unixTime\"\n            tickFormatter={(timeStr) =>\n              moment.unix(timeStr).format(timeScaleProps.timeFormat)\n            }\n            stroke={theme.palette.text.secondary}\n            style={theme.typography.body2}\n            scale=\"time\"\n            type=\"number\"\n            domain={[\n              (dataMin) => chartData[0].unixTime,\n              (dataMax) => chartData[chartData.length - 1].unixTime,\n            ]}\n            interval=\"preserveStart\"\n            ticks={ticks}\n            minTickGap={50}\n          />\n          <YAxis\n            yAxisId=\"left\"\n            tick={{ fontSize: 15 }}\n            tickFormatter={(tickVal) => `${tickVal}ms`}\n            allowDecimals={false}\n          />\n          <YAxis\n            yAxisId=\"right\"\n            orientation=\"right\"\n            tick={{ fontSize: 15 }}\n            tickFormatter={(tickVal) => `${tickVal}reqs`}\n            allowDecimals={false}\n          />\n          <Tooltip\n            labelFormatter={(timeStr) =>\n              moment.unix(timeStr).format(timeScaleProps.timeFormat)\n            }\n            formatter={(value, name) => {\n              if (name === \"Average Latency\") {\n                return [`${value.toFixed(0)} ms`, name];\n              } else return [`${value}`, name];\n            }}\n          />\n          <Area\n            yAxisId=\"left\"\n            isAnimationActive={true}\n            type=\"monotone\"\n            dataKey=\"latency\"\n            stroke=\"#a83260\" //{theme.palette.primary.main}\n            fillOpacity={0.5}\n            strokeWidth={3}\n            dot={false}\n            name=\"Average Latency\"\n            activeDot={{ r: 5 }}\n            fill=\"#a83260\"\n            animationEasing=\"ease\"\n          />\n          <Area\n            yAxisId=\"right\"\n            isAnimationActive={true}\n            type=\"monotone\"\n            dataKey=\"count\"\n            strokeWidth={3}\n            fillOpacity={0}\n            dot={false}\n            name=\"Request Count\"\n            stroke={theme.palette.primary.main}\n            animationEasing=\"ease\"\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Title from \"../Title\";\nimport moment from \"moment\";\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box minWidth={200}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.latency\n        )} ms`}</Typography>\n        <Box width=\"100%\" mr={1}>\n          <LinearProgress variant=\"determinate\" {...props} />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default function Logs({ data }) {\n  data = data.sort((a, b) => b.latency - a.latency);\n  data = data.map((datum) => {\n    let newCell = { ...datum };\n    if (datum.hasOwnProperty(\"rootFields\")) {\n      newCell.name = datum.rootFields;\n    }\n    return newCell;\n  });\n\n  return (\n    <React.Fragment>\n      <Title>Slowest Requests</Title>\n\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Root Fields</TableCell>\n            <TableCell>Latency</TableCell>\n            <TableCell>IP Address</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row._id.toString()}>\n              <TableCell>\n                {moment.unix(row.unixTime).format(\"MMM DD, 'YY @ HH:mm:ss\")}\n              </TableCell>\n              <TableCell>\n                {Array.isArray(row.name) ? row.name.join(\", \") : row.name}\n              </TableCell>\n              <TableCell>\n                <LinearProgressWithLabel\n                  value={(row.latency * 100) / data[0].latency}\n                  latency={row.latency}\n                />\n              </TableCell>\n              <TableCell>{\"placeholder\"}</TableCell>\n              <TableCell>{\"placeholder\"}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelect({ filterProps }) {\n  //options, setFilterValue, labelName }) {\n  const theme = useTheme();\n  const [selections, setSelections] = React.useState([]);\n\n  const handleChange = (event) => {\n    let {\n      target: { value },\n    } = event;\n\n    // On autofill we get a stringified value.\n    value = typeof value === \"string\" ? value.split(\",\") : value;\n\n    if (!selections.includes(\"all\") && value.includes(\"all\")) {\n      value = [\"all\"];\n    } else if (selections.includes(\"all\") && value.length > 1) {\n      value.splice(value.indexOf(\"all\"), 1);\n    }\n\n    setSelections(value);\n    filterProps.onClick(value);\n  };\n\n  return (\n    <div>\n      <FormControl fullWidth={true} sx={{ minHeight: 65 }}>\n        <InputLabel id={`multiple-name-label-${filterProps.label}`}>\n          {filterProps.label}\n        </InputLabel>\n        <Select\n          labelId={`multiple-name-label-${filterProps.label}`}\n          id={`multiple-name-${filterProps.label}`}\n          multiple\n          value={selections}\n          onChange={handleChange}\n          label={filterProps.label}\n        >\n          {filterProps.options.map((item) => (\n            <MenuItem\n              key={item}\n              value={item}\n              style={getStyles(item, selections, theme)}\n            >\n              {item}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Chart from \"./Chart\";\nimport Logs from \"./Logs\";\nimport MultipleSelector from \"./MultipleSelector\";\nimport TableContainer from \"@mui/material/TableContainer\";\n\nconst Dashboard = ({ data, filter, subfilter, timeScaleProps }) => {\n  return (\n    <>\n      {filter ? (\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 3 }}>\n            <MultipleSelector filterProps={filter} />\n          </Paper>\n        </Grid>\n      ) : null}\n\n      {subfilter ? (\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3 }}>\n            <MultipleSelector filterProps={subfilter} />\n          </Paper>\n        </Grid>\n      ) : null}\n\n      <Grid item xs={12}>\n        <Paper\n          sx={{\n            p: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Chart data={data} timeScaleProps={timeScaleProps} />\n        </Paper>\n      </Grid>\n\n      {data.length ? (\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n            <TableContainer>\n              <Logs data={data.slice(0, 10)} />\n            </TableContainer>\n          </Paper>\n        </Grid>\n      ) : null}\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { filterDataByDropdown } from \"../../funcs/Monitoring\";\n\nconst FrontendMonitoring = ({ data, timeScaleProps }) => {\n  const [filterValue, setFilterValue] = useState(\"all\");\n\n  const filterOptions = ((rawData) => {\n    let options = [\"all\"];\n\n    if (rawData.length === 0 || !rawData[0].hasOwnProperty(\"rootFields\"))\n      return options;\n\n    options.push(\n      ...new Set(rawData.map((datapoint) => datapoint.rootFields).flat())\n    );\n\n    return options;\n  })(data);\n\n  const filteredData = filterDataByDropdown(data, \"rootFields\", filterValue);\n\n  return (\n    <>\n      <Dashboard\n        data={filteredData}\n        filter={{\n          label: \"Root Queries\",\n          options: filterOptions,\n          onClick: setFilterValue,\n        }}\n        timeScaleProps={timeScaleProps}\n      />\n    </>\n  );\n};\n\nexport default FrontendMonitoring;\n","import React, { useState } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { filterDataByDropdown } from \"../../funcs/Monitoring\";\n\nconst BackendMonitoring = ({ data, timeScaleProps }) => {\n  const [resolverValue, setResolverValue] = useState([\"all\"]);\n  const [subfieldValue, setSubfieldValue] = useState([\"all\"]);\n  const rootQueries = [\"Query\", \"Mutation\", \"Subscription\"];\n\n  const filterOptions = (rawData, fieldToFilter, selectionArr = []) => {\n    const options = [\"all\"];\n\n    options.push(\n      ...new Set(\n        rawData\n          .filter((datum) => {\n            if (rootQueries.includes(datum.resolver)) return false;\n\n            if (selectionArr.length > 0) {\n              if (selectionArr.includes(\"all\")) return true;\n              return selectionArr.includes(datum.resolver);\n            }\n\n            return true;\n          })\n          .map((datum) => datum[fieldToFilter])\n          .flat()\n      )\n    );\n    return options;\n  };\n\n  // IIFE to reshape datapoints\n  ((rawData) => {\n    let callback;\n    if (rawData.length === 0) return;\n    if (!rawData[0].hasOwnProperty(\"name\")) {\n      callback = (datum) => {\n        datum.resolver = \"\";\n        datum.field = \"\";\n      };\n    } else {\n      callback = (datum) => {\n        [datum.resolver, datum.field] = datum.name.split(\".\");\n      };\n    }\n\n    rawData.forEach(callback);\n  })(data);\n\n  const resolverOptions = filterOptions(data, \"resolver\");\n  const subfieldOptions = filterOptions(data, \"field\", resolverValue);\n\n  let filteredData = filterDataByDropdown(\n    filterDataByDropdown(data, \"resolver\", resolverValue),\n    \"field\",\n    subfieldValue\n  ).filter((datum) => !rootQueries.includes(datum.resolver));\n\n  return (\n    <>\n      <Dashboard\n        data={filteredData}\n        filter={{\n          label: \"Resolvers\",\n          options: resolverOptions,\n          onClick: setResolverValue,\n        }}\n        subfilter={{\n          label: \"Subfields\",\n          options: subfieldOptions,\n          onClick: setSubfieldValue,\n        }}\n        timeScaleProps={timeScaleProps}\n      />\n    </>\n  );\n};\n\nexport default BackendMonitoring;\n","export const REFRESH_RATE_IN_MINUTES = 5;\n\nexport const IN_SECONDS = {\n  hour: 60 * 60,\n  day: 60 * 60 * 24,\n  week: 60 * 60 * 24 * 7,\n  month: 60 * 60 * 24 * 30,\n};\n\nexport const FORMATS = {\n  hour: {\n    timeFormat: \"HH:mm\",\n    timeConversion: \"MMM DD YYYY HH:mm\",\n  },\n  day: {\n    timeFormat: \"HH:00\",\n    timeConversion: \"MMM DD YYYY HH:00\",\n  },\n  week: {\n    timeFormat: \"MMM D\",\n    timeConversion: \"MMM DD YYYY 12:00\",\n  },\n  month: {\n    timeFormat: \"MMM D\",\n    timeConversion: \"MMM DD YYYY\",\n  },\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport ScaleToggler from \"./ScaleToggler\";\nimport FrontendMonitoring from \"./FrontendMonitoring\";\nimport BackendMonitoring from \"./BackendMonitoring\";\nimport apiClient from \"../../lib/apiClient\";\nimport * as time from \"../../constants/Monitoring\";\n\nconst DataView = ({ currentView, token }) => {\n  const [timeScale, setTimeScale] = useState(\"hour\");\n  const [data, setData] = useState([{ name: null, rootFields: null }]);\n  const currentTime = Math.round(new Date().getTime() / 1000);\n\n  const timeRangeProps = {\n    hour: {\n      ...time.FORMATS.hour,\n      unixStart: currentTime - time.IN_SECONDS.hour,\n      divisionInterval: time.IN_SECONDS.hour / 12,\n    },\n    day: {\n      ...time.FORMATS.day,\n      unixStart: currentTime - time.IN_SECONDS.day,\n      divisionInterval: time.IN_SECONDS.day / 24,\n    },\n    week: {\n      ...time.FORMATS.week,\n      unixStart: currentTime - time.IN_SECONDS.week,\n      divisionInterval: time.IN_SECONDS.week / 7,\n    },\n    month: {\n      ...time.FORMATS.month,\n      unixStart: currentTime - time.IN_SECONDS.month,\n      divisionInterval: time.IN_SECONDS.month / 30,\n    },\n  };\n\n  const getAPIData = useCallback(() => {\n    apiClient\n      .getTimeData(token, currentView, timeRangeProps.month.unixStart)\n      .then((resData) => {\n        setData(resData.data);\n      });\n  }, [currentView]);\n\n  useEffect(() => {\n    getAPIData();\n    const interval = setInterval(() => {\n      console.log(\"updating data...\");\n      getAPIData();\n    }, time.REFRESH_RATE_IN_MINUTES * 1000 * 60);\n    return () => clearInterval(interval);\n  }, [getAPIData, currentView]);\n\n  const filterDataByTimescale = (data, timeRange) => {\n    return data.filter((arr) => arr.unixTime >= timeRange.unixStart);\n  };\n\n  const dataFilteredByTimescale = filterDataByTimescale(\n    data,\n    timeRangeProps[timeScale]\n  );\n\n  const handleRangeToggle = (e, newTimeScale) => {\n    setTimeScale(newTimeScale);\n  };\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <Paper sx={{ p: 3 }}>\n          <ScaleToggler\n            groupName={\"Time scale toggle\"}\n            selection={timeScale}\n            onChange={handleRangeToggle}\n            options={Object.keys(timeRangeProps)}\n          />\n        </Paper>\n      </Grid>\n      {currentView === \"Client Requests\" ? (\n        <FrontendMonitoring\n          data={dataFilteredByTimescale}\n          timeScaleProps={timeRangeProps[timeScale]}\n        />\n      ) : (\n        <BackendMonitoring\n          data={dataFilteredByTimescale}\n          timeScaleProps={timeRangeProps[timeScale]}\n        />\n      )}\n    </>\n  );\n};\n\nexport default DataView;\n","import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport ScaleToggler from \"./ScaleToggler\";\nimport DataView from \"./DataView\";\nimport { Navigate } from \"react-router-dom\";\n\nconst Monitoring = ({ loggedInUser }) => {\n  const [currentView, setCurrentView] = useState(\"Client Requests\");\n\n  const handleViewToggle = (e, newView) => {\n    setCurrentView(newView);\n  };\n\n  if (loggedInUser) {\n    return (\n      <>\n        <Grid item xs={12}>\n          <Paper\n            sx={{\n              p: 3,\n              py: 3,\n            }}\n          >\n            <ScaleToggler\n              groupName={\"View toggle\"}\n              selection={currentView}\n              onChange={handleViewToggle}\n              options={[\"Client Requests\", \"API Resolvers\"]}\n            />\n          </Paper>\n        </Grid>\n\n        <DataView currentView={currentView} token={loggedInUser} />\n      </>\n    );\n  } else {\n    return <Navigate to=\"/signin\" />;\n  }\n};\n\nexport default Monitoring;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\n\nconst GraphQL = ({ sourceList, setSourceList, setOpen }) => {\n  const [name, setName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const createTimeStamp = () => {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    };\n    var today = new Date();\n    return today.toLocaleDateString(\"en-US\", options);\n  };\n\n  const handleCreateClick = (e) => {\n    e.preventDefault();\n    setSourceList([\n      ...sourceList,\n      { name, url, handler: \"graphql\", created: createTimeStamp() },\n    ]);\n    setName(\"\");\n    setUrl(\"\");\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextField\n          fullWidth\n          label='Source Name'\n          color='primary'\n          id='graphql-name'\n          aria-describedby='graphql-name'\n          name='graphql-name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        <TextField\n          fullWidth\n          label='Source Endpoint URL'\n          color='primary'\n          id='graphql-url'\n          aria-describedby='graphql-url'\n          name='url'\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n      </div>\n      <Button variant='contained' onClick={handleCreateClick}>\n        Create\n      </Button>\n    </div>\n  );\n};\n\nexport default GraphQL;\n","import React, { useState } from \"react\";\nimport { FileUploader } from \"react-drag-drop-files\";\n\n// const fileTypes = [\"JavaScript\"];\n\nfunction DragDrop({ setFile, fileTypes }) {\n  // const [file, setFile] = useState(null);\n\n  const handleChange = (file) => {\n    setFile(file);\n  };\n\n  return (\n    <FileUploader\n      onTypeError={(err) => console.error(err)}\n      handleChange={handleChange}\n      name=\"file\"\n      types={fileTypes}\n    />\n  );\n}\n\nexport default DragDrop;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport DragDrop from \"./DragDrop\";\n\nconst OpenAPI = ({ sourceList, setSourceList, setOpen }) => {\n  const [name, setName] = useState(\"\");\n  // const [url, setUrl] = useState(\"\");\n  const [schemaFile, setSchemaFile] = useState(null);\n  const [schemaContent, setSchemaContent] = useState(\"\");\n  const [schemaFileType, setSchemaFileType] = useState(\"\");\n  const fileTypes = [\"x-yaml\", \"json\"];\n\n  const createTimeStamp = () => {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    };\n    var today = new Date();\n    return today.toLocaleDateString(\"en-US\", options);\n  };\n\n  const handleCreateClick = async (e) => {\n    e.preventDefault();\n    const schemaFileContent = await schemaFile.text();\n    const schemaFileType = schemaFile.type.includes(\"json\") ? \"json\" : \"yaml\";\n    setSourceList([\n      ...sourceList,\n      { name, schemaFileType, schemaFileContent, handler: \"openapi\", created: createTimeStamp() },\n    ]);\n    setName(\"\");\n    // setUrl(\"\");\n    // setSchemaContent(\"\");\n    // setSchemaFileType(\"\");\n    setSchemaFile(null);\n    setOpen(false);\n  };\n\n  // const handleAddSchemaClick = async (e) => {\n  //   e.preventDefault();\n  //   const content = await schemaFile.text();\n  //   const type = schemaFile.type.includes(\"json\") ? \"json\" : \"yaml\";\n  //   setSchemaContent(content);\n  //   setSchemaFileType(type);\n  //   setSchemaFile(null);\n  // };\n\n  return (\n    <div>\n      <div>\n        <TextField\n          fullWidth\n          label='Source Name'\n          color='primary'\n          id='openapi-name'\n          aria-describedby='openapi-name'\n          name='openapi-name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        <DragDrop setFile={setSchemaFile} fileTypes={fileTypes} />\n\n        {/* <TextField\n          fullWidth\n          label='Source URL'\n          color='primary'\n          id='openapi-url'\n          aria-describedby='openapi-url'\n          name='url'\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        /> */}\n        {/* <Button sx={{ mb: 2, mt: 2 }} variant='contained' onClick={handleAddSchemaClick}>\n          Add Schema\n        </Button> */}\n      </div>\n\n      <Button sx={{ mt: 2 }} variant='contained' onClick={handleCreateClick}>\n        Create\n      </Button>\n    </div>\n  );\n};\n\nexport default OpenAPI;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\n\nconst Postgres = ({ sourceList, setSourceList, setOpen }) => {\n  const [name, setName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const createTimeStamp = () => {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    };\n    var today = new Date();\n    return today.toLocaleDateString(\"en-US\", options);\n  };\n\n  const handleCreateClick = (e) => {\n    e.preventDefault();\n    setSourceList([\n      ...sourceList,\n      { name, url, handler: \"postgraphile\", created: createTimeStamp() },\n    ]);\n    setName(\"\");\n    setUrl(\"\");\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextField\n          fullWidth\n          label='Database Name'\n          color='primary'\n          id='postgres-name'\n          aria-describedby='postgres-name'\n          name='postgres-name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        <TextField\n          fullWidth\n          label='Database Connection String'\n          color='primary'\n          id='postgres-connection'\n          aria-describedby='postgres-connection'\n          name='url'\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n      </div>\n      <Button variant='contained' onClick={handleCreateClick}>\n        Create\n      </Button>\n    </div>\n  );\n};\n\nexport default Postgres;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport DragDrop from \"./DragDrop\";\n\nconst Mongoose = ({ sourceList, setSourceList, setOpen }) => {\n  const [name, setName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [modelName, setModelName] = useState(\"\");\n  const [models, setModels] = useState([]);\n  const [modelFile, setModelFile] = useState(null);\n  const fileTypes = [\"javascript\"];\n\n  const createTimeStamp = () => {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    };\n    var today = new Date();\n    return today.toLocaleDateString(\"en-US\", options);\n  };\n\n  const handleCreateClick = (e) => {\n    e.preventDefault();\n    setSourceList([\n      ...sourceList,\n      { name, url, models, handler: \"mongoose\", created: createTimeStamp() },\n    ]);\n    setName(\"\");\n    setUrl(\"\");\n    setOpen(false);\n  };\n\n  const handleAddModelClick = async (e) => {\n    e.preventDefault();\n    const modelContent = await modelFile.text()\n    setModels([\n      ...models,\n      { name: modelName, content: modelContent }\n    ]);\n    setModelName(\"\");\n    setModelFile(null);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextField\n          fullWidth\n          label='Source Name'\n          color='primary'\n          id='mongoose-name'\n          aria-describedby='mongoose-name'\n          name='mongoose-name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        <TextField\n          fullWidth\n          label='Source URL'\n          color='primary'\n          id='mongoose-url'\n          aria-describedby='mongoose-url'\n          name='url'\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n      </div>\n\n      <div>\n        <Typography\n          id='modal-modal-title'\n          variant='h6'\n          color='primary'\n          component='h2'\n          sx={{ mb: 2 }}\n        >\n          Model Information\n        </Typography>\n\n        <TextField\n          fullWidth\n          label='Model Name'\n          color='primary'\n          id='mongoose-model-name'\n          aria-describedby='mongoose-model-name'\n          name='mongoose-model-name'\n          value={modelName}\n          onChange={(e) => setModelName(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        {/* <TextField\n          fullWidth\n          label='Model Endpoint URL'\n          color='primary'\n          id='mongoose-url'\n          aria-describedby='mongoose-url'\n          name='url'\n          value={modelUrl}\n          onChange={(e) => setModelUrl(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        /> */}\n\n        <DragDrop setFile={setModelFile} fileTypes={fileTypes} />\n\n        <Button sx={{ mb: 2, mt: 2 }} variant='contained' onClick={handleAddModelClick}>\n          Add Model\n        </Button>\n      </div>\n\n      <Button variant='contained' onClick={handleCreateClick} sx={{ mb: 2 }}>\n        Create\n      </Button>\n    </div>\n  );\n};\n\nexport default Mongoose;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport DragDrop from \"./DragDrop\";\n\nconst JSONSchema = ({ sourceList, setSourceList, setOpen }) => {\n  const [name, setName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [operations, setOperations] = useState([]);\n  const [operationType, setOperationType] = useState(\"\");\n  const [operationField, setOperationField] = useState(\"\");\n  const [operationPath, setOperationPath] = useState(\"\");\n  const [operationMethod, setOperationMethod] = useState(\"\");\n  // const [operationResponseSchema, setOperationResponseSchema] = useState(\"\");\n  const [operationResponseSchemaFile, setOperationResponseSchemaFile] = useState(null);\n  const fileTypes = [\"json\"];\n\n  const createTimeStamp = () => {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    };\n    var today = new Date();\n    return today.toLocaleDateString(\"en-US\", options);\n  };\n\n  const handleCreateClick = (e) => {\n    e.preventDefault();\n    setSourceList([\n      ...sourceList,\n      {\n        name,\n        url,\n        operations,\n        handler: \"jsonSchema\",\n        created: createTimeStamp(),\n      },\n    ]);\n    setName(\"\");\n    setUrl(\"\");\n    setOpen(false);\n  };\n\n  const handleAddOperationClick = async (e) => {\n    e.preventDefault();\n\n    const content = await operationResponseSchemaFile.text();\n    setOperations([\n      ...operations,\n      { type: operationType, field: operationField, path: operationPath, method: operationMethod, responseSchemaContent: content }\n    ]);\n    setOperationType(\"\");\n    setOperationField(\"\");\n    setOperationPath(\"\");\n    setOperationMethod(\"\");\n    // setOperationResponseSchema(\"\");\n    setOperationResponseSchemaFile(null);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextField\n          fullWidth\n          label='Source Name'\n          color='primary'\n          id='json-schema-name'\n          aria-describedby='json-schema-name'\n          name='json-schema-name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        <TextField\n          fullWidth\n          label='Source URL'\n          color='primary'\n          id='json-schema-url'\n          aria-describedby='json-schema-url'\n          name='url'\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n      </div>\n\n      <div>\n        <Typography\n          id='modal-modal-title'\n          variant='h6'\n          color='primary'\n          component='h2'\n          sx={{ mb: 2 }}\n        >\n          Operation Information\n        </Typography>\n\n        <TextField\n          fullWidth\n          label='Operation Type'\n          color='primary'\n          id='json-schema-operation-type'\n          aria-describedby='json-schema-operation-type'\n          name='json-schema-operation-type'\n          value={operationType}\n          onChange={(e) => setOperationType(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        <TextField\n          fullWidth\n          label='Operation Field'\n          color='primary'\n          id='json-schema-operation-field'\n          aria-describedby='json-schema-operation-field'\n          name='json-schema-operation-field'\n          value={operationField}\n          onChange={(e) => setOperationField(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        <TextField\n          fullWidth\n          label='Operation Path'\n          color='primary'\n          id='json-schema-operation-path'\n          aria-describedby='json-schema-operation-path'\n          name='json-schema-operation-path'\n          value={operationPath}\n          onChange={(e) => setOperationPath(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        <TextField\n          fullWidth\n          label='Operation Method'\n          color='primary'\n          id='json-schema-operation-method'\n          aria-describedby='json-schema-operation-method'\n          name='json-schema-operation-method'\n          value={operationMethod}\n          onChange={(e) => setOperationMethod(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        />\n\n        {/* <TextField\n          fullWidth\n          label='Operation Response Schema Path'\n          color='primary'\n          id='json-schema-operation-responseSchema'\n          aria-describedby='json-schema-operation-responseSchema'\n          name='json-schema-operation-responseSchema'\n          value={operationResponseSchema}\n          onChange={(e) => setOperationResponseSchema(e.target.value)}\n          variant='outlined'\n          sx={{ mb: 2 }}\n        /> */}\n\n        <DragDrop setFile={setOperationResponseSchemaFile} fileTypes={fileTypes} />\n\n        <Button sx={{ mb: 2, mt: 2 }} variant='contained' onClick={handleAddOperationClick}>\n          Add Operation\n        </Button>\n      </div>\n\n      <Button variant='contained' onClick={handleCreateClick} sx={{ mb: 2 }}>\n        Create\n      </Button>\n    </div>\n  );\n};\n\nexport default JSONSchema;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport GraphQL from \"./handler_form_components/GraphQL\";\nimport OpenAPI from \"./handler_form_components/OpenAPI\";\nimport Postgres from \"./handler_form_components/Postgres\";\nimport Mongoose from \"./handler_form_components/Mongoose\";\nimport JSONSchema from \"./handler_form_components/JSONSchema\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"5px solid #1976d2\",\n  borderRadius: \"5px\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst selectMeshHandler = (handlerName, sourceList, setSourceList, setOpen) => {\n  switch (handlerName) {\n    case \"GraphQL\":\n      return (\n        <GraphQL\n          sourceList={sourceList}\n          setSourceList={setSourceList}\n          setOpen={setOpen}\n        />\n      );\n    case \"OpenAPI\":\n      return (\n        <OpenAPI\n          sourceList={sourceList}\n          setSourceList={setSourceList}\n          setOpen={setOpen}\n        />\n      );\n    case \"PostgreSQL\":\n      return (\n        <Postgres\n          sourceList={sourceList}\n          setSourceList={setSourceList}\n          setOpen={setOpen}\n        />\n      );\n    case \"Mongoose\":\n      return (\n        <Mongoose\n          sourceList={sourceList}\n          setSourceList={setSourceList}\n          setOpen={setOpen}\n        />\n      );\n    case \"JSON Schema\":\n      return (\n        <JSONSchema\n          sourceList={sourceList}\n          setSourceList={setSourceList}\n          setOpen={setOpen}\n        />\n      )\n    default:\n      return \"No Handler Selected\";\n  }\n};\n\nexport default function BasicModal({ handlerName, sourceList, setSourceList }) {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button onClick={handleOpen} variant='contained'>\n        Add\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='modal-modal-title'\n        aria-describedby='modal-modal-description'\n      >\n        <Box sx={style}>\n          <Typography\n            id='modal-modal-title'\n            variant='h6'\n            color='primary'\n            component='h2'\n            sx={{ mb: 2 }}\n          >\n            Source Information\n          </Typography>\n          {selectMeshHandler(handlerName, sourceList, setSourceList, setOpen)}\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Title from \"../Title\";\nimport InputModal from \"./InputModal\";\n\n// Generate Handler Data\nfunction createData(id, name, description, value) {\n  return { id, name, description, value };\n}\n\nconst rows = [\n  createData(0, \"GraphQL\", \"Load remote GraphQL Schema\", \"graphql\"),\n  createData(1, \"OpenAPI\", \"Load remote OpenAPI and Swagger\", \"openapi\"),\n  createData(2, \"JSON Schema\", \"Load remote JSON Schema\", \"json-schema\"),\n  createData(3, \"PostgreSQL\", \"Connect to your PostgreSQL DB\", \"postgraphile\"),\n  createData(4, \"Mongoose\", \"Connect to your MongoDB\", \"mongoose\"),\n];\n\nconst HandlerList = ({ sourceList, setSourceList }) => {\n\n  return (\n    <>\n      <Title>Connect a data source</Title>\n      <Table size='small'>\n        <TableHead>\n          <TableRow>\n            <TableCell>Connector name</TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align='right'>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.description}</TableCell>\n              <TableCell align='right'>\n                <InputModal\n                  handlerName={row.name}\n                  sourceList={sourceList}\n                  setSourceList={setSourceList}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nexport default HandlerList;\n","import React from \"react\";\n// import Link from '@mui/material/Link';\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Title from \"../Title\";\nimport { Button } from \"@mui/material\";\nimport apiClient from \"../../lib/apiClient\";\nimport { useState } from \"react\";\nimport { Alert } from \"@mui/material\";\n\nconst DeleteSourceButton = ({\n  sourcelist,\n  sourcename,\n  setSourceList,\n  handleAlert,\n}) => {\n  const handleSourceDelete = () => {\n    let filteredSourceList = sourcelist.filter((source) => {\n      return source.name !== sourcename;\n    });\n    setSourceList([...filteredSourceList]);\n  };\n  return (\n    <>\n      <Button\n        sourceList={sourcelist}\n        sourceName={sourcename}\n        onClick={handleSourceDelete}\n      >\n        🗑\n      </Button>\n    </>\n  );\n};\n\nconst ConnectedSources = ({ loggedInUser, sourceList, setSourceList }) => {\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const sources = sourceList;\n\n  const handleAlertTimeout = (messageType) => {\n    messageType === \"success\"\n      ? setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3500)\n      : setTimeout(() => {\n          setErrorMessage(null);\n        }, 3500);\n  };\n\n  const handleSubmit = async () => {\n    let response = await apiClient.createConfig(loggedInUser, sources);\n    if (response === 200) {\n      setSuccessMessage(\"Synapse-mesh has been successfully created!\");\n      handleAlertTimeout(\"success\");\n    } else {\n      setErrorMessage(\"Failed to create your Synapse-mesh\");\n      handleAlertTimeout();\n    }\n  };\n  return (\n    <>\n      {\" \"}\n      {successMessage ? (\n        <Alert\n          sx={{ mb: 2 }}\n          onClose={() => {\n            setSuccessMessage(null);\n          }}\n          severity='success'\n          variant='filled'\n        >\n          {successMessage}\n        </Alert>\n      ) : (\n        <></>\n      )}\n      {errorMessage ? (\n        <Alert\n          sx={{ mb: 2 }}\n          severity='error'\n          variant='filled'\n          onClose={() => {\n            setErrorMessage(null);\n          }}\n        >\n          {errorMessage}\n        </Alert>\n      ) : (\n        <></>\n      )}\n      <Title>Your connected data sources</Title>\n      <Table size='small'>\n        <TableHead>\n          <TableRow>\n            <TableCell>Source Name</TableCell>\n            <TableCell>Connector Type</TableCell>\n            <TableCell align='center'>Status</TableCell>\n            <TableCell>Created date</TableCell>\n            <TableCell align='center'>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sourceList.map((source) => (\n            <TableRow key={source.id}>\n              <TableCell>{source.name}</TableCell>\n              <TableCell>{source.handler}</TableCell>\n              <TableCell align='center'>✓</TableCell>\n              <TableCell>{source.created}</TableCell>\n              <TableCell align='center'>\n                <DeleteSourceButton\n                  sourcelist={sourceList}\n                  setSourceList={setSourceList}\n                  sourcename={source.name}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Button\n        sx={{ width: \"40%\", mt: 2 }}\n        variant='contained'\n        onClick={handleSubmit}\n      >\n        Create Your Synapse\n      </Button>\n      {/* <Link color=\"primary\" href=\"#\" onClick={preventDefault} sx={{ mt: 3 }}>\n        See more...\n      </Link> */}\n    </>\n  );\n};\n\nexport default ConnectedSources;\n","import React, { useState } from \"react\";\n// import apiClient from \"../../lib/apiClient\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\n// import ExistingSources from \"./ExistingSources\";\nimport HandlerList from \"./HandlerList\";\n// import Title from \"../Title\";\nimport ConnectedSources from \"./ConnectedSources\";\nimport { Navigate } from \"react-router-dom\";\n\n// Handler Forms\n// import OpenAPI from \"./handler_form_components/OpenAPI\";\n// import GraphQL from \"./handler_form_components/GraphQL\";\n// import Postgres from \"./handler_form_components/Postgres\";\n\nconst DataSources = ({ loggedInUser }) => {\n  const [sourceList, setSourceList] = useState([]);\n  // const [currentHandler, setCurrentHandler] = useState(\"\");\n\n  // const handleOnSubmit = (e) => {\n  //   e.preventDefault();\n  //   apiClient.createConfig(sourceList);\n  // };\n\n  // const handlerForms = {\n  //   openapi: <OpenAPI sourceList={sourceList} setSourceList={setSourceList} />,\n  //   graphql: <GraphQL sourceList={sourceList} setSourceList={setSourceList} />,\n  //   postgraphile: (\n  //     <Postgres sourceList={sourceList} setSourceList={setSourceList} />\n  //   ),\n  // };\n\n  if (loggedInUser) {\n    return (\n      <>\n        <Grid item xs={12}>\n          {sourceList.length > 0 ? (\n            <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n              <ConnectedSources\n                loggedInUser={loggedInUser}\n                sourceList={sourceList}\n                setSourceList={setSourceList}\n              />\n            </Paper>\n          ) : null}\n        </Grid>\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n            <HandlerList\n              sourceList={sourceList}\n              setSourceList={setSourceList}\n            />\n          </Paper>\n        </Grid>\n      </>\n    );\n  } else {\n    return <Navigate to='/signin' />;\n  }\n};\n\nexport default DataSources;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport apiClient from \"../../lib/apiClient\";\nimport { Navigate } from \"react-router-dom\";\nimport { Alert } from \"@mui/material\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant='body2'\n      color='text.secondary'\n      align='center'\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color='inherit' href='https://mui.com/'>\n        Synapse\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp({\n  setLoggedInUser,\n  loggedInUser,\n  isAdmin,\n  closeModal,\n  setUsers,\n  allUsers,\n}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [makeAdmin, setMakeAdmin] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const userObj = {\n      username: data.get(\"username\"),\n      password: data.get(\"password\"),\n      firstName: firstName,\n      lastName: data.get(\"lastName\"),\n      admin: makeAdmin ? \"true\" : \"false\",\n    };\n\n    let responseData = await apiClient.signupUser(userObj);\n    if (responseData.error) {\n      setErrorMessage(responseData.error);\n    } else {\n      setErrorMessage(null);\n      clearForm();\n      setSuccessMessage(`Successfully created user ${username}`);\n      setUsers([...allUsers, responseData]);\n      setTimeout(() => {\n        closeModal(false);\n      }, 1500);\n    }\n  };\n\n  const clearForm = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n    setMakeAdmin(false);\n  };\n\n  if (!loggedInUser && !isAdmin) {\n    return <Navigate to='/' />;\n  } else {\n    return (\n      <ThemeProvider theme={theme}>\n        <Container component='main' maxWidth='xs'>\n          <CssBaseline />\n          {errorMessage ? (\n            <Alert severity='error' variant='filled'>\n              {errorMessage}\n            </Alert>\n          ) : (\n            <></>\n          )}\n          {successMessage ? (\n            <Alert severity='success' variant='filled'>\n              {successMessage}\n            </Alert>\n          ) : (\n            <></>\n          )}\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n              Create a User\n            </Typography>\n            <Box\n              component='form'\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete='given-name'\n                    name='firstName'\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    required\n                    fullWidth\n                    id='firstName'\n                    label='First Name'\n                    autoFocus\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    id='lastName'\n                    label='Last Name'\n                    name='lastName'\n                    autoComplete='family-name'\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    id='username'\n                    label='Username'\n                    name='username'\n                    autoComplete='username'\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    name='password'\n                    label='Password'\n                    type='password'\n                    id='password'\n                    autoComplete='new-password'\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        value={makeAdmin}\n                        checked={makeAdmin}\n                        onChange={() => setMakeAdmin(!makeAdmin)}\n                        color='primary'\n                      />\n                    }\n                    label='Make user an admin'\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type='submit'\n                fullWidth\n                variant='contained'\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign Up\n              </Button>\n            </Box>\n          </Box>\n          <Copyright sx={{ mt: 5 }} />\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { Navigate } from \"react-router-dom\";\nimport apiClient from \"../../lib/apiClient\";\nimport { Alert } from \"@mui/material\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Synapse\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn({\n  loggedInUser,\n  setLoggedInUser,\n  setIsAdmin,\n  setUsername,\n}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    let userObj = {\n      username: data.get(\"username\"),\n      password: data.get(\"password\"),\n    };\n\n    let responseData = await apiClient.loginUser(userObj);\n    if (responseData.error) {\n      setErrorMessage(responseData.error);\n    } else {\n      setLoggedInUser(responseData.token);\n      setIsAdmin(responseData.admin);\n      setUsername(responseData.username);\n    }\n  };\n\n  if (loggedInUser) {\n    return <Navigate to=\"/\" />;\n  } else {\n    return (\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          {errorMessage ? (\n            <Alert severity=\"error\" variant=\"filled\">\n              {errorMessage}\n            </Alert>\n          ) : (\n            <></>\n          )}\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              {/* <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              /> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n              {/* <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/signup\" variant=\"body2\" >\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid> */}\n            </Box>\n          </Box>\n          <Copyright sx={{ mt: 8, mb: 4 }} />\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport Divider from \"@mui/material/Divider\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\n\nfunction NavBarLeft({ Drawer, MainList, isAdmin, open, toggleDrawer }) {\n  return (\n    <>\n      <Drawer variant=\"permanent\" open={open}>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <MainList isAdmin={isAdmin} />\n      </Drawer>\n    </>\n  );\n}\n\nexport default NavBarLeft;\n","import React from 'react'\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nfunction MenuButton({toggleDrawer, open}) {\n  return (\n    <>\n      <IconButton\n        edge=\"start\"\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={toggleDrawer}\n        sx={{\n          marginRight: \"36px\",\n          ...(open && { display: \"none\" }),\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n    </>\n  )\n}\n\nexport default MenuButton\n","import * as React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Typography from \"@mui/material/Typography\";\nimport apiClient from \"../../lib/apiClient\";\nimport { useEffect, useState } from \"react\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\n\n// const handleUserEdit = (username) => {\n//   console.log(username);\n// };\n\nconst handleUserDelete = async (username, allUsers, setUsers) => {\n  let responseData = await apiClient.deleteUser({ username: username });\n  if (responseData.status === 204) {\n    let updatedUsers = allUsers.filter((user) => user.username !== username);\n    setUsers([...updatedUsers]);\n  }\n};\n\nexport default function UserTable({ allUsers, setUsers, setPopup }) {\n  return (\n    <TableContainer component={Paper} sx={{ mt: 2 }}>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <TableCell\n              colSpan={6}\n              align=\"center\"\n              sx={{ bgcolor: \"#2976D2\", color: \"white\" }}\n            >\n              {\" \"}\n              <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                sx={{ fontWeight: \"bold\" }}\n              >\n                User List\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <StyledTableCell>User Name</StyledTableCell>\n            <StyledTableCell align=\"center\">First Name</StyledTableCell>\n            <StyledTableCell align=\"center\">Last Name</StyledTableCell>\n            <StyledTableCell align=\"center\">Role</StyledTableCell>\n            {/* <StyledTableCell align='center'>Edit</StyledTableCell> */}\n            <StyledTableCell align=\"center\">Delete</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allUsers.map((row) => (\n            <StyledTableRow key={row.username}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.username}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">{row.firstName}</StyledTableCell>\n              <StyledTableCell align=\"center\">{row.lastName}</StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {row.admin ? \"Sith Lord\" : \"Rebel Scum\"}\n              </StyledTableCell>\n              {/* <StyledTableCell align='center'>\n                <EditIcon onClick={() => handleUserEdit(row.username)} />\n              </StyledTableCell> */}\n              <StyledTableCell align=\"center\">\n                <DeleteIcon\n                  sx={{ cursor: \"pointer\" }}\n                  onClick={() => setPopup({ show: true, user: row.username })}\n                />\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Container } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Title from \"../Title\";\nimport { Navigate } from \"react-router-dom\";\nimport UserTable from \"./UserTable\";\nimport AddUserModal from \"./AddUserModal\";\nimport apiClient from \"../../lib/apiClient\";\nimport { Alert } from \"@mui/material\";\n\nimport DeleteConfirmationModal from \"./DeleteConfirmatonModal\";\n\nconst ManageUsers = ({ loggedInUser, isAdmin }) => {\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [popup, setPopup] = useState({\n    show: false, // initial values set to false and null\n    user: null,\n  });\n\n  const handleDeleteUser = async () => {\n    let responseData = await apiClient.deleteUser({ username: popup.user });\n    if (responseData.status === 204) {\n      let updatedUsers = users.filter((user) => user.username !== popup.user);\n      setUsers([...updatedUsers]);\n      setPopup({\n        show: false,\n        user: null,\n      });\n      setSuccessMessage(\"Successfully deleted user!\");\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 3500);\n    }\n  };\n\n  if (!loggedInUser && !isAdmin) {\n    return <Navigate to=\"/\" />;\n  } else {\n    useEffect(() => {\n      apiClient.getAllUsers().then((response) => setUsers(response));\n    }, []);\n\n    return (\n      <Grid item xs={12}>\n        <Paper\n          sx={{\n            p: 3,\n            py: 3,\n          }}\n        >\n          <Title component=\"h1\" variant=\"h5\">\n            Manage Users\n          </Title>\n          <AddUserModal\n            loggedInUser={loggedInUser}\n            isAdmin={isAdmin}\n            setUsers={setUsers}\n            users={users}\n          />\n          {popup.show && (\n            <DeleteConfirmationModal\n              popup={popup}\n              setPopup={setPopup}\n              deleteUser={handleDeleteUser}\n            />\n          )}\n          {successMessage ? (\n            <Alert\n              onClose={() => {\n                setSuccessMessage(null);\n              }}\n              severity=\"success\"\n              variant=\"filled\"\n            >\n              {successMessage}\n            </Alert>\n          ) : (\n            <></>\n          )}\n          <UserTable allUsers={users} setUsers={setUsers} setPopup={setPopup} />\n        </Paper>\n      </Grid>\n    );\n  }\n};\n\nexport default ManageUsers;\n","import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Title from \"../Title\";\nimport markdown from \"./markdown\";\n\nconst Documentation = () => {\n  return (\n    <>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 5, display: \"flex\", flexDirection: \"column\" }}>\n        <Title>Documentation</Title>\n          <ReactMarkdown children={markdown} />\n        </Paper>\n      </Grid></>\n  )\n}\n\nexport default Documentation;","export default `\n# [![Synapse-branding-logo](<INSERT IMAGE URL>)][github]\n\n## The Team\n\n**[Jay Gudsson](https://www.linkedin.com/in/gudsson/)** _Software Engineer_ Narnia, Narnia\n\n**[Justin Gustafson](https://www.linkedin.com/in/justin-gustafson-98063945/)** _Software Engineer_ Narnia, Narnia\n\n**[Aneesh Patel](https://www.linkedin.com/in/aneesh-patel-62172b91/)** _Software Engineer_ Narnia, Narnia\n\n**[Dylan Jones](https://www.linkedin.com/in/dylan-jones-053310218/)** _Software Engineer_ Narnia, Narnia\n\n---\n\n## Table of Contents\n\n- [Introduction](#introduction)\n- [Prerequisites](#prerequisites)\n- [Installion](#installation)\n- [Basic Usage](#basic-usage)\n- [Gateway Manager](#gateway-manager)\n- [Query Monitoring](#query-monitoring)\n- [Frontend vs. Backend Buttons](#frontend-vs-backend-buttons)\n- [Viewing Data Options](#viewing-data-options)\n- [Development vs. Production Server](#development-vs-production-server)\n- [Managing Users](#managing-users)\n- [Synapse Configuration](#synapse-configuration)\n- [Adding Data Sources](#adding-data-sources)\n- [Development Flow](#development-flow)\n- [Deployment](#deployment)\n\n---\n\n## Introduction\n\nSynapse was designed to facilitate the efficient creation of a single GraphQL gateway for multiple existing APIs. It does so by providing an intuitive user interface (the Gateway Manager) to set up and configure your gateway in just a few steps. The Synapse Gateway Manager includes monitoring for all queries and mutations made to the Gateway, allowing the developer to view and filter queries by individual resolvers and in addition to view the latency of each query or resolver. Synapse also offers easy deployment, allowing the developer to deploy their created gateway to Amazon Web Services with a single command.\n\n## GraphQL in Front of Your APIs\n\nSynapse does not replace your existing APIs/data sources with GraphQL, but rather creates a single GraphQL schema that stitches your existing sources together. You can think of the Synapse GraphQL Gateway as a separate server sitting in front of your APIs with the ability to request specific information from them to fulfill different queries from the client. From the client’s perspective, the gateway is just a single GraphQL endpoint, but from the backend perspective, the gateway is making requests to all your existing APIs and data sources, enabling it to respond with the requested data. This allows you to use your existing APIs while providing a better client experience. To read more about how Synapse works under the hood and the problems it solves please view our Case Study (INSERT LINK HERE).\n\n---\n\n## Prerequisites\n\nPlease install the following if you do not already have each one installed:\n- [Node.js and NPM](https://nodejs.org/en/download/)\n- [AWS Account](https://portal.aws.amazon.com/billing/signup#/start)\n- [AWS CLI configured locally](https://aws.amazon.com/cli/)\n- [Docker](https://docs.docker.com/get-docker/)\n\n## Installation\n\n1. To clone the Synapse repository and set up the Gateway Manager run the following command: \\`<INSERT COMMAND>\\`\n2. After running the above command, you will be prompted to input information for establishing a root user for the Gateway Manager\n    - By default, the root user will have admin privileges and be able to create and manage users when your gateway is deployed (via AWS Copilot)\n    - In development, only the root account can be used for configuring and monitoring your GraphQL gateway\n3. Once the repository has been set up on your local environment, from within the \\`server\\` directory, start up MongoDB with following command: \\`<INSERT COMMAND>\\`\n    - This will run MongoDB on your local environment (via Docker container) and be used during development\n4. After MongoDB is successfully up and running, launch the Gateway Manager with the following command: \\`<INSERT COMMAND>\\`\n    - You can read more about the Gateway Manager in the Gateway Manager section below\n\n## Basic Usage\n\n1. Once the Gateway Manager is successfully up and running, visit \\`localhost:4005\\` to login and start configuring your GraphQL gateway\n    - Log in with the root account created during the installation process\n2. Within the Data Sources tab, you can select, configure, and add all required data sources to be combined within your gateway\n    - For more information on how to add specific sources and what sources are available please see the Adding Data Sources section on the docs\n3. After you have added all your required data sources, configure and generate your GraphQL gateway by clicking on the “Create Your Synapse” button\n    - Synapse will generate a default GraphQL schema for all your added data sources which can be customized by altering the \\`.meshrc\\` file located in the \\`server\\` directory. Once altered, run the following command: \\`<INSERT COMMAND>\\`. Synapse is powered by GraphQL Mesh under the hood, for more information on customizing your gateway, please visit the [GraphQL Mesh Docs](https://www.graphql-mesh.com/docs/getting-started/introduction).\n4. To launch and test your gateway run the following command: \\`<INSERT COMMAND>\\`\n5. Once the gateway server is running, you can visit \\`localhost:5000\\` to interact with a GraphiQL playground to test out your GraphQL API Gateway\n    - All queries and mutations made to the server will be recorded in your local MongoDB and can be viewed on the Gateway Manager. Note, this data will be reset once you’ve deployed your server to AWS\n6. Deploy your Synapse GraphQL Gateway to AWS by running the following command: \\`<INSERT COMMAND>\\`\n    - Amazon CLI must be downloaded and configured\n    - For more information about deployment, read the Deployment section below\n\n---\n\n## Gateway Manager\n\nAt its core, The Gateway Manager is an interface to manage the Synapse GraphQL Gateway. In development, the root user will be able to login and add data sources (API endpoints) to configure the gateway from the Data Sources menu tab. Once the data sources have been added, the user clicks on the “Create Your Synapse” button and Synapse automatically creates a unified, stitched GraphQL schema for all of the added data sources.\n\nSynapse will also configure a GraphQL server that implements the generated schema automatically so that the user only needs to run a single command to start testing out their new GraphQL gateway. Every query and mutation made to this GraphQL gateway is then recorded and can be viewed from the Metrics & Logs menu tab in the Gateway Manager.\n\n## Query Monitoring\n\nThe user has many choices for how they would like to view and monitor their gateway data. This can be done from the dropdown menu at the top of the monitoring page.\n\n## Frontend vs. Backend Buttons\n\n(INSERT DIFFERENCES)\n\n## Viewing Data Options\n\n- Choose a time frame to view all of the queries or mutations\n- View data on root queries\n- View data on specific resolvers\n- View top ten queries with the highest latency\n\n## Development vs. Production Server\n\nThere are two versions of the Gateway Manager, one for development and the other for production. There are some key distinctions between the two as explained below. \n\n## Managing Users\n\nIn development, only the root user is able to log in and no user accounts can be created. Therefore, this version does not have a user management tab. In the production version, however, root/admin users are able to view a “Manage Users” tab which will allow them to create and delete additional users. When creating a user, the admin is able to specify whether the new user will be an admin or not. The difference between an admin and non-admin user is that users with admin privileges are the only ones able to add and manage users in production but all users are able to view metrics/logs in production. \n\n## Synapse Configuration\n\nThe other key distinction between the production and development Gateway Manager is that the Synapse GraphQL Server can only be configured in development. Once in production, the Gateway Manager no longer shows the Data Sources tab and loses the functionality of adding/deleting data sources from the gateway. Only the original root user is able to configure and modify the gateway in development before it is deployed\n\n## Adding Data Sources\n\nSynapse allows the user to add any number of data sources and a variety of API types, currently supporting GraphQL, REST, MongoDB, PostgresQL, and JSON Schema data sources. Depending on the data source, Synapse will prompt you to either type in a URL pointing to the data source (GraphQL, PostgreSQL) or ask you to upload a yaml file with the specification for that data source (OAS specification for REST). Synapse allows you to delete any data sources you’ve added (in development) and then provides a button to “Create Your Synapse”. Once a user clicks that button, Synapse will automatically configure and create the GraphQL Gateway. The user then only needs to run a single command to start the Gateway Server which is powered by GraphQL Mesh.\n\nAfter the user has added all their data sources, Synapse uses GraphQL Mesh to create a default unified schema for the gateway server. Users can view this unified schema by looking in the .mesh directory that is generated when the gateway is created. If a user would like to further customize the schema and add additional features, they are able to easily do so manually by following the open-source [GraphQL Mesh documentation](https://www.graphql-mesh.com/docs/getting-started/introduction). Additionally, since Synapse uses Apollo to create the gateway server, users are able to take advantage of Apollo-specific features to customize their Apollo server even further.\n\n## Development Flow\n\nAfter the repository has been set up locally, the user will have a development Gateway Manager server, as well as a \\`docker-compose\\` file for starting MongoDB locally within the \\`server\\` directory.\n\nFirst the user can start running MongoDB locally by running the command \\`docker-compose up\\` while in the \\`server\\` directory. After MongoDB is up and running, the user can start the Gateway Manager server by running the command \\`npm run start-gui\\`. The Gateway Manager will be running on port 4005 by default. \n\nThe user can then visit \\`http://localhost:4005\\` and login with the root account they created upon downloading and setting up the Synapse repository. Once logged in, the user can click on the Data Sources tab, add all their data sources and then create their Synapse gateway. The user is now ready to test out the gateway server. \n\nThe gateway server can be run locally by running the command \\`npm run start-apollo\\`. The gateway server will run on port 5000 by default. Navigating to \\`http://localhost:5000\\` will direct the user to a GraphiQL playground where they are able to test out their server with different queries and mutations. If the user wants to make any changes to the gateway or add further customization at this point, they can stop the gateway server on port 5000 and make the necessary changes, either through the Gateway Manager or manually in the repository. The user can then relaunch the server by running the same command, \\`npm run start-apollo\\` for further testing. Once the user is satisfied with their gateway, they can deploy their gateway and a production Gateway Manager easily. \n\n## Deployment\n\nTo start, stop both the Gateway server running on port 5000 and the Gateway Manager server running on port 4005. Then, stop the MongoDB container by running the command \\`docker-compose down\\`. It is important at this point to make sure the user has the AWS CLI installed and configured on their local machine. Afterwards, the user can run the command (INSERT DEPLOYMENT COMMAND) and a production Gateway Manager server and the Synapse GraphQL Gateway will be spun up on AWS and connected to MongoDB. \n\nThe deployment happens through the use of AWS CoPilot, which will create and register containers for MongoDB, the production Gateway Manager, and the Synapse GraphQL Gateway onto AWS ECR and then spin them up on AWS ECS. \n\n---\n`;\n","import React, { useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport ErrorTableTwo from \"./monitoring_components/ErrorTableTwo\";\nimport { SidebarMainList } from \"./Navigation\";\nimport Monitoring from \"./monitoring_components/Monitoring\";\nimport DataSources from \"./datasources_components/DataSources\";\nimport SignUp from \"./authentication_components/Signup\";\nimport SignIn from \"./authentication_components/Signin\";\nimport NavBarLeft from \"./navbar-left/NavBarLeft\";\nimport MenuButton from \"./navbar-left/MenuButton\";\nimport ManageUsers from \"./authentication_components/ManageUsers\";\nimport Documentation from \"./documentation_components/Documentation\";\nimport { Navigate } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\nconst mdTheme = createTheme();\n\nconst Dashboard = () => {\n  const [open, setOpen] = React.useState(true);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const toggleLoggedIn = (e) => {\n    e.preventDefault();\n    if (loggedInUser) {\n      setLoggedInUser(null);\n      setIsAdmin(false);\n    }\n  };\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={!!loggedInUser && open}>\n          <Toolbar\n            sx={{\n              pr: \"24px\", // keep right padding when drawer closed\n            }}\n          >\n            {loggedInUser ? (\n              <MenuButton toggleDrawer={toggleDrawer} open={open} />\n            ) : null}\n\n            {/* GUI Title */}\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Synapse Gateway Manager\n            </Typography>\n\n            {/* Notifications */}\n            <IconButton color=\"inherit\" onClick={toggleLoggedIn}>\n              {loggedInUser ? (\n                <Typography>Hi {username} | Logout</Typography>\n              ) : (\n                \"\"\n              )}\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        {/* Nav Bar */}\n        {loggedInUser ? (\n          <NavBarLeft\n            Test={SidebarMainList}\n            Drawer={Drawer}\n            MainList={SidebarMainList}\n            isAdmin={isAdmin}\n            open={open}\n            toggleDrawer={toggleDrawer}\n          />\n        ) : null}\n\n        {/* Main Content Area */}\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\",\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              {/* Features */}\n              <Routes>\n                <Route\n                  path=\"/\"\n                  element={<Monitoring loggedInUser={loggedInUser} />}\n                />\n                <Route\n                  path=\"/datasources\"\n                  element={<DataSources loggedInUser={loggedInUser} />}\n                />\n                {/* <Route\n                  path=\"/manageusers\"\n                  element={\n                    <ManageUsers\n                      setLoggedInUser={setLoggedInUser}\n                      loggedInUser={loggedInUser}\n                      isAdmin={isAdmin}\n                    />\n                  }\n                /> */}\n                <Route\n                  path=\"/createuser\"\n                  element={\n                    <SignUp\n                      setLoggedInUser={setLoggedInUser}\n                      loggedInUser={loggedInUser}\n                      isAdmin={isAdmin}\n                    />\n                  }\n                />\n                <Route\n                  path=\"/signin\"\n                  element={\n                    <SignIn\n                      setUsername={setUsername}\n                      setIsAdmin={setIsAdmin}\n                      setLoggedInUser={setLoggedInUser}\n                      loggedInUser={loggedInUser}\n                    />\n                  }\n                />\n                <Route path=\"/documentation\" element={<Documentation />} />\n                <Route\n                  path=\"/errors\"\n                  element={<ErrorTableTwo loggedInUser={loggedInUser} />}\n                />\n                <Route\n                  path=\"*\"\n                  element={<Navigate to=\"/signin\" />}\n                />\n              </Routes>\n            </Grid>\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from \"./Dashboard\";\n\nexport default function App() {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  );\n}\n","import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './components/App';\nimport theme from './components/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <Router>\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}